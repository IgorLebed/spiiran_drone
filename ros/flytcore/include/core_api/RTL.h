// Generated by gencpp from file core_api/RTL.msg
// DO NOT EDIT!


#ifndef CORE_API_MESSAGE_RTL_H
#define CORE_API_MESSAGE_RTL_H

#include <ros/service_traits.h>


#include <core_api/RTLRequest.h>
#include <core_api/RTLResponse.h>


namespace core_api
{

struct RTL
{

typedef RTLRequest Request;
typedef RTLResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct RTL
} // namespace core_api


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::core_api::RTL > {
  static const char* value()
  {
    return "937c9679a518e3a18d831e57125ea522";
  }

  static const char* value(const ::core_api::RTL&) { return value(); }
};

template<>
struct DataType< ::core_api::RTL > {
  static const char* value()
  {
    return "core_api/RTL";
  }

  static const char* value(const ::core_api::RTL&) { return value(); }
};


// service_traits::MD5Sum< ::core_api::RTLRequest> should match 
// service_traits::MD5Sum< ::core_api::RTL > 
template<>
struct MD5Sum< ::core_api::RTLRequest>
{
  static const char* value()
  {
    return MD5Sum< ::core_api::RTL >::value();
  }
  static const char* value(const ::core_api::RTLRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::core_api::RTLRequest> should match 
// service_traits::DataType< ::core_api::RTL > 
template<>
struct DataType< ::core_api::RTLRequest>
{
  static const char* value()
  {
    return DataType< ::core_api::RTL >::value();
  }
  static const char* value(const ::core_api::RTLRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::core_api::RTLResponse> should match 
// service_traits::MD5Sum< ::core_api::RTL > 
template<>
struct MD5Sum< ::core_api::RTLResponse>
{
  static const char* value()
  {
    return MD5Sum< ::core_api::RTL >::value();
  }
  static const char* value(const ::core_api::RTLResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::core_api::RTLResponse> should match 
// service_traits::DataType< ::core_api::RTL > 
template<>
struct DataType< ::core_api::RTLResponse>
{
  static const char* value()
  {
    return DataType< ::core_api::RTL >::value();
  }
  static const char* value(const ::core_api::RTLResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // CORE_API_MESSAGE_RTL_H
