;; Auto-generated. Do not edit!


(when (boundp 'navigation_util::NavigationPosFeedback)
  (if (not (find-package "NAVIGATION_UTIL"))
    (make-package "NAVIGATION_UTIL"))
  (shadow 'NavigationPosFeedback (find-package "NAVIGATION_UTIL")))
(unless (find-package "NAVIGATION_UTIL::NAVIGATIONPOSFEEDBACK")
  (make-package "NAVIGATION_UTIL::NAVIGATIONPOSFEEDBACK"))

(in-package "ROS")
;;//! \htmlinclude NavigationPosFeedback.msg.html
(if (not (find-package "GEOMETRY_MSGS"))
  (ros::roseus-add-msgs "geometry_msgs"))


(defclass navigation_util::NavigationPosFeedback
  :super ros::object
  :slots (_position_error _yaw_error _sum_sq_error ))

(defmethod navigation_util::NavigationPosFeedback
  (:init
   (&key
    ((:position_error __position_error) (instance geometry_msgs::Point :init))
    ((:yaw_error __yaw_error) 0.0)
    ((:sum_sq_error __sum_sq_error) 0.0)
    )
   (send-super :init)
   (setq _position_error __position_error)
   (setq _yaw_error (float __yaw_error))
   (setq _sum_sq_error (float __sum_sq_error))
   self)
  (:position_error
   (&rest __position_error)
   (if (keywordp (car __position_error))
       (send* _position_error __position_error)
     (progn
       (if __position_error (setq _position_error (car __position_error)))
       _position_error)))
  (:yaw_error
   (&optional __yaw_error)
   (if __yaw_error (setq _yaw_error __yaw_error)) _yaw_error)
  (:sum_sq_error
   (&optional __sum_sq_error)
   (if __sum_sq_error (setq _sum_sq_error __sum_sq_error)) _sum_sq_error)
  (:serialization-length
   ()
   (+
    ;; geometry_msgs/Point _position_error
    (send _position_error :serialization-length)
    ;; float32 _yaw_error
    4
    ;; float32 _sum_sq_error
    4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; geometry_msgs/Point _position_error
       (send _position_error :serialize s)
     ;; float32 _yaw_error
       (sys::poke _yaw_error (send s :buffer) (send s :count) :float) (incf (stream-count s) 4)
     ;; float32 _sum_sq_error
       (sys::poke _sum_sq_error (send s :buffer) (send s :count) :float) (incf (stream-count s) 4)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; geometry_msgs/Point _position_error
     (send _position_error :deserialize buf ptr-) (incf ptr- (send _position_error :serialization-length))
   ;; float32 _yaw_error
     (setq _yaw_error (sys::peek buf ptr- :float)) (incf ptr- 4)
   ;; float32 _sum_sq_error
     (setq _sum_sq_error (sys::peek buf ptr- :float)) (incf ptr- 4)
   ;;
   self)
  )

(setf (get navigation_util::NavigationPosFeedback :md5sum-) "73c4f1364353f8d8f4de503f3aaa2904")
(setf (get navigation_util::NavigationPosFeedback :datatype-) "navigation_util/NavigationPosFeedback")
(setf (get navigation_util::NavigationPosFeedback :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======

geometry_msgs/Point position_error
float32 yaw_error
#This corresponds to the termination criterion, tolerance
float32 sum_sq_error


================================================================================
MSG: geometry_msgs/Point
# This contains the position of a point in free space
float64 x
float64 y
float64 z

")



(provide :navigation_util/NavigationPosFeedback "73c4f1364353f8d8f4de503f3aaa2904")


